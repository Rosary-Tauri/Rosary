name: 'Test'

on:
  push:
  workflow_dispatch:
  pull_request:
jobs:
  Test_amd64:
    permissions:
      contents: write
    strategy:
      fail-fast: false
    runs-on: 'ubuntu-22.04'
    steps:
      - uses: actions/checkout@v4
      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      - name: Prep For x86_64' # Ensures on linux does this
        run: |
          cp prep/v2/package.json package.json
          cp prep/v2/tauri.conf.json src-tauri/tauri.conf.json
          cp prep/v2/vite.config.js vite.config.js
          cp prep/v2/stable/Cargo.toml src-tauri/Cargo.toml
        # Moves Cargo.toml to src-tauri
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: install Rust Nightly
        uses: dtolnay/rust-toolchain@nightly

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # change this to npm or pnpm depending on which one you use.

      - name: add icons
        run: npm run tauri icon Bible3.png

      - name: Compile
        run: npm run tauri build
