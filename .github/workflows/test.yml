name: 'Test'

on:
  push:
    branches:
      - releases
  workflow_dispatch:
  pull_request:
jobs:
  Amd64_Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      - name: Prep For x86_64
        run: |
          cp prep/v1/package.json package.json
          cp prep/v1/tauri.conf.json src-tauri/tauri.conf.json
          cp prep/v1/vite.config.js vite.config.js
          cp prep/v1/stable/Cargo.toml src-tauri/Cargo.toml
        # Moves Cargo.toml to src-tauri
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: install Rust Nightly
        uses: dtolnay/rust-toolchain@nightly
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      
      - name: Compile
        run: |
          cd src-tauri
          cargo build
  Arm64_Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pguyot/arm-runner-action@v2.5.2
        with:
          base_image: https://dietpi.com/downloads/images/DietPi_RPi-ARMv8-Bullseye.img.xz
          cpu: cortex-a53
          bind_mount_repository: true
          image_additional_mb: 10240
          optimize_image: false
          commands: |
            # Rust complains (rightly) that $HOME doesn't match eid home
            export HOME=/root
            # Workaround to CI worker being stuck on Updating crates.io index
            export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
            # Install setup prerequisites
            apt-get update -y --allow-releaseinfo-change
            apt-get upgrade -y
            apt-get autoremove -y
            apt-get install curl
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            . "$HOME/.cargo/env"
            curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash
            # Prep for Tauri Version 1
            cp prep/v1/package.json package.json
            cp prep/v1/tauri.conf.json src-tauri/tauri.conf.json
            cp prep/v1/vite.config.js vite.config.js
            cp prep/v1/stable/Cargo.toml src-tauri/Cargo.toml
            sudo apt install -y libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
            # Install NodeJS
            cd src-tauri
            cargo build